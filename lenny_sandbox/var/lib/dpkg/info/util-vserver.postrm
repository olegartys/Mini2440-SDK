#!/bin/sh
# on purge what should be removed? maybe do it like mysql databases

. /usr/share/debconf/confmodule

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
       remove|upgrade|failed-upgrade|abort-install|abort-upgrade)
	ldconfig
	;;
	purge|disappear)
	rm -f /etc/vservers/.defaults/run.rev
	rm -rf /var/run/vservers.rev
	rm -f /etc/vservers/.defaults/vdirbase
    	;;
    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
esac

if [ "$1" = "purge" -a ! \( -x /usr/sbin/vserver \) ]; then
  if [ -e /usr/share/debconf/confmodule ]; then
  	. /usr/share/debconf/confmodule
  	db_input high util-vserver/postrm_remove_vserver_configs || true
  	db_go
  	if [ "$RET" = "true" ]; then
    		rm -rf /etc/vservers
  	fi
  	db_purge
  fi
fi

# Automatically added by dh_installinit
if [ "$1" = "purge" ] ; then
	update-rc.d util-vserver remove >/dev/null || exit $?
fi
# End automatically added section


exit 0

